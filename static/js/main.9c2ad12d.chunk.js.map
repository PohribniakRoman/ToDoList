{"version":3,"sources":["components/Login.jsx","components/Logout.jsx","components/Stat.jsx","components/TodoItem.jsx","App.jsx","index.js"],"names":["Login","changeStatus","useState","field","updateField","onSubmit","event","preventDefault","localStorage","setItem","target","name","value","trim","type","required","placeholder","onChange","Logout","onClick","removeItem","getItem","Stat","todo","className","filter","todoItem","isDone","length","TodoItem","data","deleteItem","title","date","App","user","StoredData","JSON","parse","cuurentID","id","isLogined","updateLogin","update","counter","updateCounter","initialFormData","updateData","e","time","Date","getSeconds","getMinutes","getHours","join","cuurentData","stringify","map","index","dataSlice","updatedTodos","tI","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c2ad12d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Login( {changeStatus} ) {\r\n    const [field, updateField] = useState(\"\");\r\n    return(\r\n        <form\r\n        onSubmit={(event)=>{\r\n          event.preventDefault();\r\n          changeStatus();\r\n          localStorage.setItem(\"user\", event.target.name.value.trim());\r\n          updateField(\"\");\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          required\r\n          value={field}\r\n          placeholder=\"User name\"\r\n          onChange={(event) => {\r\n            updateField(event.target.value);\r\n          }}\r\n        />\r\n        <input type=\"submit\" value=\"log in\"/>\r\n      </form>\r\n\r\n    )\r\n}","export default function Logout({changeStatus}) {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          changeStatus();\r\n          localStorage.removeItem(\"user\");\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n      <div>Current user:{localStorage.getItem('user')}</div>\r\n    </div>\r\n  );\r\n}\r\n","export default function Stat({todo}) {\r\n  return (\r\n    <section>\r\n      <div className=\"completed\">\r\n        completed:<b>{todo.filter((todoItem) => todoItem.isDone).length}</b>\r\n      </div>\r\n      <br />\r\n      <div className=\"uncompleted\">\r\n        not completed:\r\n        <b>{todo.filter((todoItem) => !todoItem.isDone).length}</b>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","export default function TodoItem({ data, changeStatus, deleteItem }) {\r\n  return (\r\n      <li className=\"todo\">\r\n        <div>\r\n          {data.title}\r\n        </div>\r\n        <div>{`Creator:${data.name}`}</div>\r\n        <div>{`Date:${data.date}`}</div>\r\n        <button onClick={changeStatus}>Complete task</button>\r\n        <button onClick={deleteItem}>x</button>\r\n      </li>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Login from \"./components/Login\";\r\nimport Logout from \"./components/Logout\";\r\nimport Stat from \"./components/Stat\";\r\nimport TodoItem from \"./components/TodoItem\";\r\nimport \"./styles/style.css\";\r\n\r\nfunction App() {\r\n  const user = localStorage.getItem(\"user\");\r\n  const StoredData = JSON.parse(localStorage.getItem(\"Todos\")) || [];\r\n  const cuurentID =\r\n    StoredData.length === 0 ? 0 : StoredData[StoredData.length - 1].id + 1;\r\n  const [isLogined, updateLogin] = useState(false);\r\n  const [todo, update] = useState(StoredData);\r\n  const [counter, updateCounter] = useState(cuurentID);\r\n  const initialFormData = {\r\n    title: \"\",\r\n    date: \"\",\r\n    isDone: false,\r\n    name: user,\r\n  };\r\n  const [data, updateData] = useState(initialFormData);\r\n  function updateFormField(event) {\r\n    updateData({ ...data, [event.target.name]: event.target.value });\r\n  }\r\n  function changeStatus() {\r\n    updateLogin(!isLogined);\r\n  }\r\n  return (\r\n    <div>\r\n      {user ? (\r\n        <Logout changeStatus={changeStatus} />\r\n      ) : (\r\n        <Login changeStatus={changeStatus} />\r\n      )}\r\n      <form\r\n        className={user ? \"form\" : \"none\"}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          const time = [ new Date().getSeconds() < 10 ? `0${new Date().getSeconds()}` : new Date().getSeconds(),new Date().getMinutes() < 10 ? `0${new Date().getMinutes()}` : new Date().getMinutes(),new Date().getHours() < 10 ? `0${new Date().getHours}` : new Date().getHours()].join(':')\r\n          const cuurentData = [\r\n            ...todo,\r\n            { ...data, id: counter, date: time,name:user},\r\n          ]\r\n          update(cuurentData);\r\n          updateCounter(counter + 1);\r\n          updateData(initialFormData);\r\n          localStorage.setItem(\r\n            \"Todos\",\r\n            JSON.stringify(cuurentData)\r\n          );\r\n        }}\r\n      >\r\n        <input\r\n          required\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={data.title}\r\n          onChange={updateFormField}\r\n        />\r\n        <button type=\"submit\">Add task</button>\r\n      </form>\r\n      <ul>\r\n        {todo.map((todoItem, index) => {\r\n          return (\r\n            <TodoItem\r\n              key={todoItem.id}\r\n              data={todoItem}\r\n              changeStatus={() => {\r\n                const dataSlice = [...todo];\r\n                dataSlice[index].isDone = !todoItem.isDone;\r\n                update(dataSlice);\r\n                localStorage.setItem(\"Todos\", JSON.stringify(dataSlice));\r\n              }}\r\n              deleteItem={() => {\r\n                const updatedTodos = todo.filter((tI) => {\r\n                  return tI.id !== todoItem.id;\r\n                });\r\n                update(updatedTodos);\r\n                localStorage.setItem(\"Todos\", JSON.stringify(updatedTodos));\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n      <Stat todo={todo} />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}